<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丁忆的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-23T07:47:36.117Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>丁忆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot 整合rabbitmq以及延时队列的两种方式</title>
    <link href="http://yoursite.com/2019/04/24/SpringBoot%20%E6%95%B4%E5%90%88rabbitmq%E4%BB%A5%E5%8F%8A%E5%BB%B6%E6%97%B6%E9%98%9F%E5%88%97%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/04/24/SpringBoot 整合rabbitmq以及延时队列的两种方式/</id>
    <published>2019-04-23T16:05:00.000Z</published>
    <updated>2019-04-23T07:47:36.117Z</updated>
    
    <content type="html"><![CDATA[<h5 id="rabbitmq的下载安装"><a href="#rabbitmq的下载安装" class="headerlink" title="rabbitmq的下载安装"></a>rabbitmq的下载安装</h5><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">官方安装部署文档：http://www.rabbitmq.com/install-windows.html官方文档说明</span><br><span class="line">erlang：    http://www.erlang.org/downloads</span><br><span class="line">RabbitMQ：  http://www.rabbitmq.com/</span><br></pre></td></tr></table></figure><h5 id="导入maven的依赖"><a href="#导入maven的依赖" class="headerlink" title="导入maven的依赖"></a>导入maven的依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- RabbitMQ --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.5.2.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq:</span><br><span class="line">   host: 127.0.0.1</span><br><span class="line">   password: guest</span><br><span class="line">   username: guest</span><br><span class="line">   publisher-confirms: true</span><br><span class="line">   port: 5672</span><br></pre></td></tr></table></figure><h5 id="新建RabbitConfig配置类"><a href="#新建RabbitConfig配置类" class="headerlink" title="新建RabbitConfig配置类"></a>新建RabbitConfig配置类</h5><blockquote><p>RabbitConfig配置了3种模式</p><ul><li>直连模式 –DirectExchange</li><li>主题模式 – TopicExchange</li><li>广播模式 – FanoutExchange<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">package com.test.demo.config;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.amqp.core.Binding;</span><br><span class="line">import org.springframework.amqp.core.BindingBuilder;</span><br><span class="line">import org.springframework.amqp.core.CustomExchange;</span><br><span class="line">import org.springframework.amqp.core.DirectExchange;</span><br><span class="line">import org.springframework.amqp.core.FanoutExchange;</span><br><span class="line">import org.springframework.amqp.core.Queue;</span><br><span class="line">import org.springframework.amqp.core.TopicExchange;</span><br><span class="line">import org.springframework.amqp.rabbit.connection.CachingConnectionFactory;</span><br><span class="line">import org.springframework.amqp.rabbit.connection.ConnectionFactory;</span><br><span class="line">import org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.beans.factory.config.ConfigurableBeanFactory;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Scope;</span><br><span class="line">/**</span><br><span class="line">Broker:它提供一种传输服务,它的角色就是维护一条从生产者到消费者的路线，保证数据能按照指定的方式进行传输, </span><br><span class="line">Exchange：消息交换机,它指定消息按什么规则,路由到哪个队列。 </span><br><span class="line">Queue:消息的载体,每个消息都会被投到一个或多个队列。 </span><br><span class="line">Binding:绑定，它的作用就是把exchange和queue按照路由规则绑定起来. </span><br><span class="line">Routing Key:路由关键字,exchange根据这个关键字进行消息投递。 </span><br><span class="line">*/</span><br><span class="line">@Configuration</span><br><span class="line">public class RabbitConfig &#123;</span><br><span class="line"> </span><br><span class="line">    private final Logger logger = LoggerFactory.getLogger(this.getClass());</span><br><span class="line"> </span><br><span class="line">    @Value(&quot;$&#123;spring.rabbitmq.host&#125;&quot;)</span><br><span class="line">    private String host;</span><br><span class="line"> </span><br><span class="line">    @Value(&quot;$&#123;spring.rabbitmq.port&#125;&quot;)</span><br><span class="line">    private int port;</span><br><span class="line"> </span><br><span class="line">    @Value(&quot;$&#123;spring.rabbitmq.username&#125;&quot;)</span><br><span class="line">    private String username;</span><br><span class="line"> </span><br><span class="line">    @Value(&quot;$&#123;spring.rabbitmq.password&#125;&quot;)</span><br><span class="line">    private String password;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    /**</span><br><span class="line">             * 交换机 </span><br><span class="line">     */</span><br><span class="line">    public static final String EXCHANGE_A = &quot;exchange_a&quot;; </span><br><span class="line">    public static final String TOPICEXCHANGE = &quot;topicExchange&quot;;</span><br><span class="line">    public static final String FANOUT_EXCHANGE = &quot;fanout_exchange&quot;;</span><br><span class="line"> </span><br><span class="line">    /**</span><br><span class="line">              * 队列A</span><br><span class="line">     */</span><br><span class="line">    public static final String QUEUE_A = &quot;QUEUE_A&quot;;</span><br><span class="line">    public static final String QUEUE_B = &quot;QUEUE_B&quot;;</span><br><span class="line">    public static final String QUEUE_C = &quot;QUEUE_C&quot;;</span><br><span class="line">    /**</span><br><span class="line">              * 路由关键字</span><br><span class="line">     */</span><br><span class="line">    public static final String ROUTINGKEY_A = &quot;topic.a&quot;;</span><br><span class="line">    public static final String ROUTINGKEY_B = &quot;topic.b&quot;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    public ConnectionFactory connectionFactory() &#123;</span><br><span class="line">        CachingConnectionFactory connectionFactory = new CachingConnectionFactory(host,port);</span><br><span class="line">        connectionFactory.setUsername(username);</span><br><span class="line">        connectionFactory.setPassword(password);</span><br><span class="line">        connectionFactory.setVirtualHost(&quot;/&quot;);</span><br><span class="line">        connectionFactory.setPublisherConfirms(true);</span><br><span class="line">        return connectionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</span><br><span class="line">    //必须是prototype类型</span><br><span class="line">    public RabbitTemplate rabbitTemplate() &#123;</span><br><span class="line">        RabbitTemplate template = new RabbitTemplate(connectionFactory());</span><br><span class="line">        return template;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">              * 获取队列A</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean(name=&quot;queueA&quot;)</span><br><span class="line">    public Queue queueA() &#123;</span><br><span class="line">        return new Queue(QUEUE_A, true); //队列持久</span><br><span class="line">    &#125;</span><br><span class="line">    @Bean(name=&quot;queueB&quot;)</span><br><span class="line">    public Queue queueB() &#123;</span><br><span class="line">    return new Queue(QUEUE_B, true); //队列持久</span><br><span class="line">    &#125;</span><br><span class="line">    @Bean(name=&quot;queueC&quot;)</span><br><span class="line">    public Queue queueC() &#123;</span><br><span class="line">    return new Queue(QUEUE_C, true); //队列持久</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">直连交换机 </span><br><span class="line">*/</span><br><span class="line">@Bean</span><br><span class="line">public DirectExchange defaultExchange() &#123;</span><br><span class="line">  return new DirectExchange(EXCHANGE_A);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">     * 主题交换机 </span><br><span class="line">     */</span><br><span class="line">    @Bean  </span><br><span class="line">    TopicExchange exchange() &#123;</span><br><span class="line">     return new TopicExchange(TOPICEXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   /*</span><br><span class="line">    * 广播交换机</span><br><span class="line">    */</span><br><span class="line">    @Bean</span><br><span class="line">    FanoutExchange fanoutExchange() &#123;</span><br><span class="line">    return new FanoutExchange(RabbitConfig.FANOUT_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">/*</span><br><span class="line"> * Binding</span><br><span class="line"> */</span><br><span class="line">    @Bean</span><br><span class="line">    public Binding binding() &#123;</span><br><span class="line">        return BindingBuilder.bind(queueA()).to(defaultExchange()).with(RabbitConfig.ROUTINGKEY_A);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //对列绑定并关联到ROUTINGKEYw</span><br><span class="line">    @Bean</span><br><span class="line">    Binding bindingExchangeMessages(@Qualifier(&quot;queueB&quot;) Queue queueB, TopicExchange exchange) &#123;</span><br><span class="line">        return BindingBuilder.bind(queueB).to(exchange).with(&quot;topic.#&quot;);//*表示一个词,#表示多个</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line">    //把所有的队列都绑定到这个交换机上去</span><br><span class="line">    @Bean</span><br><span class="line">    Binding bindingExchangeA(@Qualifier(&quot;queueA&quot;) Queue queueA,FanoutExchange fanoutExchange) &#123;</span><br><span class="line">        return BindingBuilder.bind(queueA).to(fanoutExchange);</span><br><span class="line">    &#125;</span><br><span class="line">    @Bean</span><br><span class="line">    Binding bindingExchangeB(@Qualifier(&quot;queueB&quot;) Queue queueB, FanoutExchange fanoutExchange) &#123;</span><br><span class="line">        return BindingBuilder.bind(queueB).to(fanoutExchange);</span><br><span class="line">    &#125;</span><br><span class="line">    @Bean</span><br><span class="line">    Binding bindingExchangeC(@Qualifier(&quot;queueC&quot;) Queue queueC, FanoutExchange fanoutExchange) &#123;</span><br><span class="line">        return BindingBuilder.bind(queueC).to(fanoutExchange);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h5 id="新建生产者类MsgProducer-java"><a href="#新建生产者类MsgProducer-java" class="headerlink" title="新建生产者类MsgProducer.java"></a>新建生产者类MsgProducer.java</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">package com.test.demo.config;</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.amqp.AmqpException;</span><br><span class="line">import org.springframework.amqp.core.Message;</span><br><span class="line">import org.springframework.amqp.core.MessagePostProcessor;</span><br><span class="line">import org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line">import org.springframework.amqp.rabbit.support.CorrelationData;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">/*</span><br><span class="line"> * 生产者</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class MsgProducer implements RabbitTemplate.ConfirmCallback &#123;</span><br><span class="line"> </span><br><span class="line">    private final Logger logger = LoggerFactory.getLogger(this.getClass());</span><br><span class="line"> </span><br><span class="line">    //由于rabbitTemplate的scope属性设置为ConfigurableBeanFactory.SCOPE_PROTOTYPE，所以不能自动注入</span><br><span class="line">    private RabbitTemplate rabbitTemplate;</span><br><span class="line">    /**</span><br><span class="line">             * 构造方法注入rabbitTemplate</span><br><span class="line">     */</span><br><span class="line">    @Autowired</span><br><span class="line">    public MsgProducer(RabbitTemplate rabbitTemplate) &#123;</span><br><span class="line">        this.rabbitTemplate = rabbitTemplate;</span><br><span class="line">        rabbitTemplate.setConfirmCallback(this); //rabbitTemplate如果为单例的话，那回调就是最后设置的内容</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void sendMsg(String content) &#123;</span><br><span class="line">        CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());</span><br><span class="line">        //把消息放入ROUTINGKEY_A对应的队列当中去，对应的是队列A</span><br><span class="line">        logger.info(&quot;把消息放入ROUTINGKEY_A对应的队列当中去，对应的是队列A: &quot;+content);</span><br><span class="line">        rabbitTemplate.convertAndSend(RabbitConfig.EXCHANGE_A, RabbitConfig.ROUTINGKEY_A, content, correlationId);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    public void sendMsg4(String content) &#123;</span><br><span class="line">    CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());</span><br><span class="line">    //把消息放入TOPICEXCHANGE对应的队列当中去</span><br><span class="line">    logger.info(&quot;把消息放入TOPICEXCHANGE对应的队列当中去: &quot;+content);</span><br><span class="line">     this.rabbitTemplate.convertAndSend(RabbitConfig.TOPICEXCHANGE.toString(), &quot;topic.b&quot;, content,correlationId);   </span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void sendAll(String content) &#123;</span><br><span class="line">    CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());</span><br><span class="line">     logger.info(&quot;把消息放入FANOUT_EXCHANGE对应的队列当中: &quot;+content);</span><br><span class="line">    rabbitTemplate.convertAndSend(RabbitConfig.FANOUT_EXCHANGE,&quot;&quot;,content,correlationId);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">             * 回调</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void confirm(CorrelationData correlationData, boolean ack, String cause) &#123;</span><br><span class="line">        logger.info(&quot; 回调id:&quot; + correlationData);</span><br><span class="line">        if (ack) &#123;</span><br><span class="line">            logger.info(&quot;消息成功消费&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            logger.info(&quot;消息消费失败:&quot; + cause);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="新建消费者类MsgReceiver-java"><a href="#新建消费者类MsgReceiver-java" class="headerlink" title="新建消费者类MsgReceiver.java"></a>新建消费者类MsgReceiver.java</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package com.test.demo.config;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line">import org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 消费者</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class MsgReceiver &#123;</span><br><span class="line"> </span><br><span class="line">    private final Logger logger = LoggerFactory.getLogger(this.getClass());</span><br><span class="line">    </span><br><span class="line">    @RabbitListener(queues = RabbitConfig.QUEUE_A)</span><br><span class="line">    public void process(String content) &#123;</span><br><span class="line">        logger.info(&quot;接收处理队列A当中的消息： &quot; + content);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @RabbitListener(queues = RabbitConfig.QUEUE_B)</span><br><span class="line">    public void process1(String content) &#123;</span><br><span class="line">    logger.info(&quot;接收处理队列B当中的消息： &quot; + content);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="新建测试类"><a href="#新建测试类" class="headerlink" title="新建测试类"></a>新建测试类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">    private MsgProducer msgProducer;</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line">    @Test</span><br><span class="line">    public void process()&#123;</span><br><span class="line">    msgProducer.sendMsg(&quot;hahahahahha&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    @Test</span><br><span class="line">    public void processA() &#123;</span><br><span class="line">    msgProducer.sendAll(&quot;my name is senAll !&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @Test</span><br><span class="line">    public void processC() &#123;</span><br><span class="line">    msgProducer.sendMsg4(&quot;Topic111:============&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="实现延时队列的两种方式：利用TTL-DLX实现延时队列的方式"><a href="#实现延时队列的两种方式：利用TTL-DLX实现延时队列的方式" class="headerlink" title="实现延时队列的两种方式：利用TTL DLX实现延时队列的方式"></a>实现延时队列的两种方式：利用TTL DLX实现延时队列的方式</h5><ul><li>在RabbitConfig配置文件中添加</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">static final String IMMEDIATE_QUEUE = &quot;immediate_queue&quot;;</span><br><span class="line">static final String DELAY_QUEUE = &quot;delay_queue&quot;;</span><br><span class="line"></span><br><span class="line">static final String IMMEDIATE_EXCHANGE = &quot;immediate_exchange&quot;;</span><br><span class="line">static final String DEAD_LETTER_EXCHANGE = &quot;dead_letter_exchange&quot;;</span><br><span class="line"></span><br><span class="line">static final String IMMEDIATE_ROUTING_KEY = &quot;immediate_routing_key&quot;;</span><br><span class="line">static final String DELAY_ROUTING_KEY = &quot;delay_routing_key&quot;;</span><br><span class="line"></span><br><span class="line">// 创建一个立即消费队列</span><br><span class="line">@Bean</span><br><span class="line">public Queue immediateQueue() &#123;</span><br><span class="line">    // 第一个参数是创建的queue的名字，第二个参数是是否支持持久化</span><br><span class="line">    return new Queue(RabbitConfig.IMMEDIATE_QUEUE, true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 创建一个延时队列</span><br><span class="line">@Bean</span><br><span class="line">public Queue delayQueue() &#123;</span><br><span class="line">    Map&lt;String, Object&gt; params = new HashMap&lt;&gt;();</span><br><span class="line">    // x-dead-letter-exchange 声明了队列里的死信转发到的DLX名称，</span><br><span class="line">    params.put(&quot;x-dead-letter-exchange&quot;, RabbitConfig.IMMEDIATE_EXCHANGE);</span><br><span class="line">    // x-dead-letter-routing-key 声明了这些死信在转发时携带的 routing-key 名称。</span><br><span class="line">    params.put(&quot;x-dead-letter-routing-key&quot;, RabbitConfig.IMMEDIATE_ROUTING_KEY);</span><br><span class="line">    return new Queue(RabbitConfig.DELAY_QUEUE, true, false, false, params);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">public DirectExchange immediateExchange() &#123;</span><br><span class="line">    // 一共有三种构造方法，可以只传exchange的名字， 第二种，可以传exchange名字，是否支持持久化，是否可以自动删除，</span><br><span class="line">    //第三种在第二种参数上可以增加Map，Map中可以存放自定义exchange中的参数</span><br><span class="line">    return new DirectExchange(RabbitConfig.IMMEDIATE_EXCHANGE, true, false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">public DirectExchange deadLetterExchange() &#123;</span><br><span class="line">    // 一共有三种构造方法，可以只传exchange的名字， 第二种，可以传exchange名字，是否支持持久化，是否可以自动删除，</span><br><span class="line">    //第三种在第二种参数上可以增加Map，Map中可以存放自定义exchange中的参数</span><br><span class="line">    return new DirectExchange(RabbitConfig.DEAD_LETTER_EXCHANGE, true, false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">//把立即消费的队列和立即消费的exchange绑定在一起</span><br><span class="line">public Binding immediateBinding() &#123;</span><br><span class="line">    return BindingBuilder.bind(immediateQueue()).to(immediateExchange()).with(RabbitConfig.IMMEDIATE_ROUTING_KEY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">//把立即消费的队列和立即消费的exchange绑定在一起</span><br><span class="line">public Binding delayBinding() &#123;</span><br><span class="line">    return BindingBuilder.bind(delayQueue()).to(deadLetterExchange()).with(RabbitConfig.DELAY_ROUTING_KEY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在生产类MsgProducer-添加"><a href="#在生产类MsgProducer-添加" class="headerlink" title="在生产类MsgProducer 添加"></a>在生产类MsgProducer 添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public void send(String content, int delayTime) &#123;</span><br><span class="line">    System.out.println(&quot;delayTime&quot; + delayTime);</span><br><span class="line">    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">    this.rabbitTemplate.convertAndSend(RabbitConfig.DEAD_LETTER_EXCHANGE, RabbitConfig.DELAY_ROUTING_KEY, content, message -&gt; &#123;</span><br><span class="line">        message.getMessageProperties().setExpiration(delayTime + &quot;&quot;);</span><br><span class="line">        System.out.println(sdf.format(new Date()) + &quot; Delay sent.&quot;);</span><br><span class="line">        return message;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在消费MsgReceiver-添加"><a href="#在消费MsgReceiver-添加" class="headerlink" title="在消费MsgReceiver 添加"></a>在消费MsgReceiver 添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@RabbitListener(queues = RabbitConfig.IMMEDIATE_QUEUE)</span><br><span class="line">   @RabbitHandler</span><br><span class="line">   public void get(String content) &#123;</span><br><span class="line">       System.out.println(&quot;收到延时消息了&quot; + content);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="在测试类添加"><a href="#在测试类添加" class="headerlink" title="在测试类添加"></a>在测试类添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void processD() &#123;</span><br><span class="line">msgProducer.send(&quot;test===========&quot;, 1000);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="利用rabbitmq中的插件x-delay-messagestart"><a href="#利用rabbitmq中的插件x-delay-messagestart" class="headerlink" title="利用rabbitmq中的插件x-delay-messagestart"></a>利用rabbitmq中的插件x-delay-messagestart</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下载地址：https://www.rabbitmq.com/community-plugins.html</span><br><span class="line">rabbitmq_delayed_message_exchange-20171201-3.7.x.ez</span><br><span class="line">windows版本：把插件复制到rabbitmq的安装目录plugins下启动插件 </span><br><span class="line">启动命令：rabbitmq-plugins enable rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure><h5 id="在配置类中添加"><a href="#在配置类中添加" class="headerlink" title="在配置类中添加"></a>在配置类中添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">static final String IMMEDIATE_QUEUE_XDELAY = &quot;immediate_queue_xdelay&quot;;</span><br><span class="line">   </span><br><span class="line">   static final String DELAYED_EXCHANGE_XDELAY = &quot;delayed_exchange_xdelay&quot;;</span><br><span class="line">   </span><br><span class="line">   static final String DELAY_ROUTING_KEY_XDELAY = &quot;delay_routing_key_xdelay&quot;;</span><br><span class="line">   </span><br><span class="line">   // 创建一个立即消费队列</span><br><span class="line">   @Bean</span><br><span class="line">   public Queue immediateQueue2() &#123;</span><br><span class="line">       // 第一个参数是创建的queue的名字，第二个参数是是否支持持久化</span><br><span class="line">       return new Queue(RabbitConfig.IMMEDIATE_QUEUE_XDELAY, true);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Bean</span><br><span class="line">   public CustomExchange delayExchange() &#123;</span><br><span class="line">       Map&lt;String, Object&gt; args = new HashMap&lt;String, Object&gt;();</span><br><span class="line">       args.put(&quot;x-delayed-type&quot;, &quot;direct&quot;);</span><br><span class="line">       return new CustomExchange(RabbitConfig.DELAYED_EXCHANGE_XDELAY, &quot;x-delayed-message&quot;, true, false, args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Bean</span><br><span class="line">   public Binding bindingNotify() &#123;</span><br><span class="line">       return BindingBuilder.bind(immediateQueue()).to(delayExchange()).with(RabbitConfig.DELAY_ROUTING_KEY_XDELAY).noargs();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="同样在生产者类中添加"><a href="#同样在生产者类中添加" class="headerlink" title="同样在生产者类中添加"></a>同样在生产者类中添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public void send2(String content, int delayTime) &#123;</span><br><span class="line">    System.out.println(&quot;delayTime&quot; + delayTime);</span><br><span class="line">    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">    this.rabbitTemplate.convertAndSend(RabbitConfig.DELAYED_EXCHANGE_XDELAY, RabbitConfig.DELAY_ROUTING_KEY_XDELAY, content, new MessagePostProcessor() &#123;</span><br><span class="line">        public Message postProcessMessage(Message message) throws AmqpException &#123;</span><br><span class="line">            message.getMessageProperties().setDelay(delayTime);</span><br><span class="line">            System.out.println(sdf.format(new Date()) + &quot; Delay sent.&quot;);</span><br><span class="line">            return message;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在消费者类中添加"><a href="#在消费者类中添加" class="headerlink" title="在消费者类中添加"></a>在消费者类中添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@RabbitListener(queues = RabbitConfig.IMMEDIATE_QUEUE_XDELAY)</span><br><span class="line">    public void get2(String content) &#123;</span><br><span class="line">        System.out.println(&quot;Receive===&quot; + content);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="在测试类中添加"><a href="#在测试类中添加" class="headerlink" title="在测试类中添加"></a>在测试类中添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">   public void processE() &#123;</span><br><span class="line">   msgProducer.send2(&quot;test222===========&quot;, 200);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><p>==自己测试通过！==</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;rabbitmq的下载安装&quot;&gt;&lt;a href=&quot;#rabbitmq的下载安装&quot; class=&quot;headerlink&quot; title=&quot;rabbitmq的下载安装&quot;&gt;&lt;/a&gt;rabbitmq的下载安装&lt;/h5&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="RabbitMQ" scheme="http://yoursite.com/categories/RabbitMQ/"/>
    
    
      <category term="RabbitMQ" scheme="http://yoursite.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot整合quartz 持久化</title>
    <link href="http://yoursite.com/2019/04/24/Spring%20boot%E6%95%B4%E5%90%88quartz%20%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>http://yoursite.com/2019/04/24/Spring boot整合quartz 持久化/</id>
    <published>2019-04-23T16:05:00.000Z</published>
    <updated>2019-05-24T08:50:23.154Z</updated>
    
    <content type="html"><![CDATA[<h4 id="导入依赖包"><a href="#导入依赖包" class="headerlink" title="导入依赖包"></a>导入依赖包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--任务调度相关依赖--&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;quartz&lt;/artifactId&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;</span><br><span class="line">         &lt;artifactId&gt;quartz-jobs&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">   &lt;!-- quartz依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-quartz&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.mchange&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;c3p0&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.9.5.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="quartz-properties的配置"><a href="#quartz-properties的配置" class="headerlink" title="quartz.properties的配置"></a>quartz.properties的配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># 固定前缀org.quartz</span><br><span class="line"># 主要分为scheduler、threadPool、jobStore、plugin等部分</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#org.quartz.scheduler.instanceName = DefaultQuartzScheduler</span><br><span class="line">org.quartz.scheduler.rmi.export = false</span><br><span class="line">org.quartz.scheduler.rmi.proxy = false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction = false</span><br><span class="line"></span><br><span class="line"># 实例化ThreadPool时，使用的线程类为SimpleThreadPool</span><br><span class="line">org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool</span><br><span class="line"></span><br><span class="line"># threadCount和threadPriority将以setter的形式注入ThreadPool实例</span><br><span class="line"># 并发个数</span><br><span class="line">org.quartz.threadPool.threadCount = 5</span><br><span class="line"># 优先级</span><br><span class="line">org.quartz.threadPool.threadPriority = 5</span><br><span class="line">org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true</span><br><span class="line"></span><br><span class="line">org.quartz.jobStore.misfireThreshold = 5000</span><br><span class="line"></span><br><span class="line"># 默认存储在内存中</span><br><span class="line">#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore</span><br><span class="line"></span><br><span class="line">#持久化</span><br><span class="line">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line"></span><br><span class="line">org.quartz.jobStore.tablePrefix = QRTZ_</span><br><span class="line"></span><br><span class="line">org.quartz.jobStore.dataSource = qzDS</span><br><span class="line"></span><br><span class="line">org.quartz.dataSource.qzDS.driver = com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">org.quartz.dataSource.qzDS.URL = jdbc:mysql://127.0.0.1:3306/vc_pay?useUnicode=true&amp;characterEncoding=UTF-8</span><br><span class="line"></span><br><span class="line">org.quartz.dataSource.qzDS.user = root</span><br><span class="line"></span><br><span class="line">org.quartz.dataSource.qzDS.password = 123456</span><br><span class="line"></span><br><span class="line">org.quartz.dataSource.qzDS.maxConnections = 10</span><br></pre></td></tr></table></figure><p>==Spring boot 整合mysql和mybatis-plus 自己整合==</p><h4 id="SchedulerConfig的配置"><a href="#SchedulerConfig的配置" class="headerlink" title="SchedulerConfig的配置"></a>SchedulerConfig的配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">package com.test.demo.config;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">import org.quartz.Scheduler;</span><br><span class="line">import org.quartz.ee.servlet.QuartzInitializerListener;</span><br><span class="line">import org.springframework.beans.factory.config.PropertiesFactoryBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.core.io.ClassPathResource;</span><br><span class="line">import org.springframework.scheduling.quartz.SchedulerFactoryBean;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class SchedulerConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean(name=&quot;SchedulerFactory&quot;)</span><br><span class="line">    public SchedulerFactoryBean schedulerFactoryBean() throws IOException &#123;</span><br><span class="line">        SchedulerFactoryBean factory = new SchedulerFactoryBean();</span><br><span class="line">        factory.setQuartzProperties(quartzProperties());</span><br><span class="line">        return factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public Properties quartzProperties() throws IOException &#123;</span><br><span class="line">        PropertiesFactoryBean propertiesFactoryBean = new PropertiesFactoryBean();</span><br><span class="line">        propertiesFactoryBean.setLocation(new ClassPathResource(&quot;/quartz.properties&quot;));</span><br><span class="line">        //在quartz.properties中的属性被读取并注入后再初始化对象</span><br><span class="line">        propertiesFactoryBean.afterPropertiesSet();</span><br><span class="line">        return propertiesFactoryBean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">     * quartz初始化监听器</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public QuartzInitializerListener executorListener() &#123;</span><br><span class="line">       return new QuartzInitializerListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">     * 通过SchedulerFactoryBean获取Scheduler的实例</span><br><span class="line">     */</span><br><span class="line">    @Bean(name=&quot;Scheduler&quot;)</span><br><span class="line">    public Scheduler scheduler() throws IOException &#123;</span><br><span class="line">        return schedulerFactoryBean().getScheduler();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="quartz-11张表的建表语句"><a href="#quartz-11张表的建表语句" class="headerlink" title="quartz 11张表的建表语句"></a>quartz 11张表的建表语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : localhost</span><br><span class="line">Source Server Version : 50528</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : vc_pay</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50528</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2019-05-24 16:20:39</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_blob_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_blob_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_blob_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `BLOB_DATA` blob,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),</span><br><span class="line">  CONSTRAINT `QRTZ_BLOB_TRIGGERS_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_calendars</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_calendars`;</span><br><span class="line">CREATE TABLE `qrtz_calendars` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `CALENDAR_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `CALENDAR` blob NOT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_cron_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_cron_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `CRON_EXPRESSION` varchar(200) NOT NULL,</span><br><span class="line">  `TIME_ZONE_ID` varchar(80) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),</span><br><span class="line">  CONSTRAINT `QRTZ_CRON_TRIGGERS_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_fired_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_fired_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_fired_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `ENTRY_ID` varchar(95) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `INSTANCE_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `FIRED_TIME` bigint(13) NOT NULL,</span><br><span class="line">  `SCHED_TIME` bigint(13) NOT NULL,</span><br><span class="line">  `PRIORITY` int(11) NOT NULL,</span><br><span class="line">  `STATE` varchar(16) NOT NULL,</span><br><span class="line">  `JOB_NAME` varchar(200) DEFAULT NULL,</span><br><span class="line">  `JOB_GROUP` varchar(200) DEFAULT NULL,</span><br><span class="line">  `IS_NONCONCURRENT` varchar(1) DEFAULT NULL,</span><br><span class="line">  `REQUESTS_RECOVERY` varchar(1) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`ENTRY_ID`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_job_details</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_job_details`;</span><br><span class="line">CREATE TABLE `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `JOB_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `JOB_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `DESCRIPTION` varchar(250) DEFAULT NULL,</span><br><span class="line">  `JOB_CLASS_NAME` varchar(250) NOT NULL,</span><br><span class="line">  `IS_DURABLE` varchar(1) NOT NULL,</span><br><span class="line">  `IS_NONCONCURRENT` varchar(1) NOT NULL,</span><br><span class="line">  `IS_UPDATE_DATA` varchar(1) NOT NULL,</span><br><span class="line">  `REQUESTS_RECOVERY` varchar(1) NOT NULL,</span><br><span class="line">  `JOB_DATA` blob,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_locks</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_locks`;</span><br><span class="line">CREATE TABLE `qrtz_locks` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `LOCK_NAME` varchar(40) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`LOCK_NAME`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_paused_trigger_grps</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_paused_trigger_grps`;</span><br><span class="line">CREATE TABLE `qrtz_paused_trigger_grps` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_scheduler_state</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_scheduler_state`;</span><br><span class="line">CREATE TABLE `qrtz_scheduler_state` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `INSTANCE_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `LAST_CHECKIN_TIME` bigint(13) NOT NULL,</span><br><span class="line">  `CHECKIN_INTERVAL` bigint(13) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`INSTANCE_NAME`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_simple_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_simple_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_simple_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `REPEAT_COUNT` bigint(7) NOT NULL,</span><br><span class="line">  `REPEAT_INTERVAL` bigint(12) NOT NULL,</span><br><span class="line">  `TIMES_TRIGGERED` bigint(10) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),</span><br><span class="line">  CONSTRAINT `QRTZ_SIMPLE_TRIGGERS_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_simprop_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_simprop_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_simprop_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `STR_PROP_1` varchar(512) DEFAULT NULL,</span><br><span class="line">  `STR_PROP_2` varchar(512) DEFAULT NULL,</span><br><span class="line">  `STR_PROP_3` varchar(512) DEFAULT NULL,</span><br><span class="line">  `INT_PROP_1` int(11) DEFAULT NULL,</span><br><span class="line">  `INT_PROP_2` int(11) DEFAULT NULL,</span><br><span class="line">  `LONG_PROP_1` bigint(20) DEFAULT NULL,</span><br><span class="line">  `LONG_PROP_2` bigint(20) DEFAULT NULL,</span><br><span class="line">  `DEC_PROP_1` decimal(13,4) DEFAULT NULL,</span><br><span class="line">  `DEC_PROP_2` decimal(13,4) DEFAULT NULL,</span><br><span class="line">  `BOOL_PROP_1` varchar(1) DEFAULT NULL,</span><br><span class="line">  `BOOL_PROP_2` varchar(1) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),</span><br><span class="line">  CONSTRAINT `QRTZ_SIMPROP_TRIGGERS_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for qrtz_triggers</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `qrtz_triggers`;</span><br><span class="line">CREATE TABLE `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME` varchar(120) NOT NULL,</span><br><span class="line">  `TRIGGER_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `TRIGGER_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `JOB_NAME` varchar(200) NOT NULL,</span><br><span class="line">  `JOB_GROUP` varchar(200) NOT NULL,</span><br><span class="line">  `DESCRIPTION` varchar(250) DEFAULT NULL,</span><br><span class="line">  `NEXT_FIRE_TIME` bigint(13) DEFAULT NULL,</span><br><span class="line">  `PREV_FIRE_TIME` bigint(13) DEFAULT NULL,</span><br><span class="line">  `PRIORITY` int(11) DEFAULT NULL,</span><br><span class="line">  `TRIGGER_STATE` varchar(16) NOT NULL,</span><br><span class="line">  `TRIGGER_TYPE` varchar(8) NOT NULL,</span><br><span class="line">  `START_TIME` bigint(13) NOT NULL,</span><br><span class="line">  `END_TIME` bigint(13) DEFAULT NULL,</span><br><span class="line">  `CALENDAR_NAME` varchar(200) DEFAULT NULL,</span><br><span class="line">  `MISFIRE_INSTR` smallint(2) DEFAULT NULL,</span><br><span class="line">  `JOB_DATA` blob,</span><br><span class="line">  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),</span><br><span class="line">  KEY `SCHED_NAME` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),</span><br><span class="line">  CONSTRAINT `QRTZ_TRIGGERS_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`) REFERENCES `qrtz_job_details` (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for vc_details</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `vc_details`;</span><br><span class="line">CREATE TABLE `vc_details` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &apos; IDENTITY (1,1) NOT NULL &apos;,</span><br><span class="line">  `JOB_NAME` varchar(255) DEFAULT &apos;&apos; COMMENT &apos;任务名称 &apos;,</span><br><span class="line">  `JOB_GROUP` varchar(255) DEFAULT NULL COMMENT &apos;组名称 &apos;,</span><br><span class="line">  `CRON` varchar(255) DEFAULT &apos;&apos; COMMENT &apos;cron表达式 &apos;,</span><br><span class="line">  `TIME_TO_LIVE` varchar(50) DEFAULT &apos;&apos; COMMENT &apos;生存周期：0 一周，1：一个月&apos;,</span><br><span class="line">  `IS_SUSPEND` varchar(10) DEFAULT NULL COMMENT &apos;0:执行中 1：暂停&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>==包括一张自己的业务表 后台管理存储的==</p><h4 id="新建-实体类-业务层可根据自己的需求建立"><a href="#新建-实体类-业务层可根据自己的需求建立" class="headerlink" title="新建 实体类 业务层可根据自己的需求建立"></a>新建 实体类 业务层可根据自己的需求建立</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.entity;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.activerecord.Model;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableField;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableId;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableName;</span><br><span class="line">import com.baomidou.mybatisplus.enums.IdType;</span><br><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * </span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author dhj</span><br><span class="line"> * @since 2019-05-16</span><br><span class="line"> */</span><br><span class="line">@Accessors(chain = true)</span><br><span class="line">@TableName(&quot;vc_details&quot;)</span><br><span class="line">@Data</span><br><span class="line">public class Details extends Model&lt;Details&gt; &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  IDENTITY (1,1) NOT NULL </span><br><span class="line">     */</span><br><span class="line">    @TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br><span class="line">    private Long id;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 任务名称 </span><br><span class="line">     */</span><br><span class="line">    @TableField(&quot;JOB_NAME&quot;)</span><br><span class="line">    private String jobName;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 组名称 </span><br><span class="line">     */</span><br><span class="line">    @TableField(&quot;JOB_GROUP&quot;)</span><br><span class="line">    private String jobGroup;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * cron表达式 </span><br><span class="line">     */</span><br><span class="line">    @TableField(&quot;CRON&quot;)</span><br><span class="line">    private String cron;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生存周期</span><br><span class="line">     */</span><br><span class="line">    @TableField(&quot;TIME_TO_LIVE&quot;)</span><br><span class="line">    private String timeToLive;</span><br><span class="line">    /**</span><br><span class="line">     * 是否暂停 </span><br><span class="line">     */</span><br><span class="line">    @TableField(&quot;IS_SUSPEND&quot;)</span><br><span class="line">    private String isSuspend;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">@Override</span><br><span class="line">protected Serializable pkVal() &#123;</span><br><span class="line">return this.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DetailsMapper"><a href="#DetailsMapper" class="headerlink" title="DetailsMapper"></a>DetailsMapper</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.mapper;</span><br><span class="line"></span><br><span class="line">import cn.vcgroup.pay.entity.Details;</span><br><span class="line">import com.baomidou.mybatisplus.mapper.BaseMapper;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> *  Mapper 接口</span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author dhj</span><br><span class="line"> * @since 2019-05-16</span><br><span class="line"> */</span><br><span class="line">public interface DetailsMapper extends BaseMapper&lt;Details&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DetailsMapper-xml"><a href="#DetailsMapper-xml" class="headerlink" title="DetailsMapper.xml"></a>DetailsMapper.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;cn.vcgroup.pay.mapper.DetailsMapper&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 通用查询映射结果 --&gt;</span><br><span class="line">    &lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;cn.vcgroup.pay.entity.Details&quot;&gt;</span><br><span class="line">        &lt;id column=&quot;id&quot; property=&quot;id&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;JOB_NAME&quot; property=&quot;jobName&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;JOB_GROUP&quot; property=&quot;jobGroup&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;CRON&quot; property=&quot;cron&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;TIME_TO_LIVE&quot; property=&quot;timeToLive&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;IS_SUSPEND&quot; property=&quot;isSuspend&quot; /&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><h4 id="新建JobController-Controller"><a href="#新建JobController-Controller" class="headerlink" title="新建JobController Controller"></a>新建JobController Controller</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.controller;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.util.StringUtils;</span><br><span class="line">import org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.mapper.EntityWrapper;</span><br><span class="line"></span><br><span class="line">import cn.vcgroup.pay.common.Response;</span><br><span class="line">import cn.vcgroup.pay.entity.Details;</span><br><span class="line">import cn.vcgroup.pay.service.IDetailsService;</span><br><span class="line">import io.swagger.annotations.Api;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParam;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParams;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 定时任务</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @Company:VCJF</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date: 2019年5月16日 下午2:57:42</span><br><span class="line"> * @version V1.0</span><br><span class="line"> */</span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(value = &quot;job&quot;)</span><br><span class="line">@Api(description = &quot;定时任务接口&quot;,tags = &quot;定时任务接口&quot;)</span><br><span class="line">public class JobController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">public IDetailsService iDetailsService;</span><br><span class="line">    /**</span><br><span class="line">     * 查询任务</span><br><span class="line">     *</span><br><span class="line">     * @param pageNum</span><br><span class="line">     * @param pageSize</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/queryjob&quot;, method = RequestMethod.POST)</span><br><span class="line"> @ResponseBody</span><br><span class="line"> @ApiOperation(value = &quot;查询定时任务列表&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/queryjob&quot;)</span><br><span class="line">     @ApiImplicitParams(&#123;</span><br><span class="line">    @ApiImplicitParam(name = &quot;jobName&quot;, value = &quot;任务名称&quot;, required = false, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;jobGroup&quot;, value = &quot;任务分组名称&quot;, required = false, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> &#125;)</span><br><span class="line">    public List&lt;Details&gt; queryjob(@RequestBody Details details) &#123;</span><br><span class="line">    //List&lt;JobAndTrigger&gt; jobAndTrigger = iJobAndTriggerService.getJobAndTriggerDetails(pageNum, pageSize);</span><br><span class="line">    List&lt;Details&gt; list = iDetailsService.queryjob(details);</span><br><span class="line">        return list;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 添加任务</span><br><span class="line">     *</span><br><span class="line">     * @param jobInfo</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/addjob&quot;, method = RequestMethod.POST)</span><br><span class="line"> @ResponseBody</span><br><span class="line"> @ApiOperation(value = &quot;添加定时任务&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/addjob&quot;)</span><br><span class="line"> @ApiImplicitParams(&#123;</span><br><span class="line">    @ApiImplicitParam(name = &quot;jobName&quot;, value = &quot;任务名称&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;jobGroup&quot;, value = &quot;任务分组名称&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;cron&quot;, value = &quot;cron表达式&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;timeToLive&quot;, value = &quot;生存周期&quot;, required = false, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> &#125;)</span><br><span class="line">    public Response addjob(@RequestBody Details details) throws Exception &#123;</span><br><span class="line">        if (&quot;&quot;.equals(details.getJobName()) || &quot;&quot;.equals(details.getJobGroup()) || &quot;&quot;.equals(details.getJobGroup())) &#123;</span><br><span class="line">        return Response.createSuccessResponse(&quot;不能为空&quot;, null);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">        details.setIsSuspend(&quot;0&quot;);// 0:启动 1：暂停</span><br><span class="line">         return iDetailsService.saveDetails(details);</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 更新任务</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/reschedulejob&quot;, method = RequestMethod.POST)</span><br><span class="line">     @ResponseBody</span><br><span class="line"> @ApiOperation(value = &quot;更新任务&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/reschedulejob&quot;)</span><br><span class="line"> @ApiImplicitParams(&#123;</span><br><span class="line">    @ApiImplicitParam(name = &quot;id&quot;, value = &quot;id&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;int&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;cron&quot;, value = &quot;cron表达式&quot;, required = false, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">    @ApiImplicitParam(name = &quot;timeToLive&quot;, value = &quot;生存周期&quot;, required = false, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> &#125;)</span><br><span class="line">    public Response rescheduleJob(@RequestBody Details details) &#123;</span><br><span class="line">    if(details != null) &#123;</span><br><span class="line">    return iDetailsService.selectDetailsById(details);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">    return Response.createSuccessResponse(&quot;更新失败&quot;, null);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">      * 暂停任务</span><br><span class="line">     *</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/pausejob&quot;, method = RequestMethod.GET)</span><br><span class="line"> @ResponseBody</span><br><span class="line"> @ApiOperation(value = &quot;暂停任务&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/pausejob&quot;)</span><br><span class="line"> @ApiImplicitParams(&#123;</span><br><span class="line"> @ApiImplicitParam(name = &quot;id&quot;, value = &quot;id&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> &#125;)</span><br><span class="line">    public Response pausejob(@RequestParam(value = &quot;id&quot;) String id) throws Exception &#123;</span><br><span class="line">     if(!StringUtils.isEmpty(id))&#123;</span><br><span class="line">     return iDetailsService.pausejob(id);</span><br><span class="line">     &#125;else &#123;</span><br><span class="line">     return Response.createSuccessResponse(&quot;id不能为空&quot;, null);</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 恢复任务</span><br><span class="line">     *</span><br><span class="line">     * @param jobClassName</span><br><span class="line">     * @param jobGroupName</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/resumejob&quot;, method = RequestMethod.GET)</span><br><span class="line">   @ResponseBody</span><br><span class="line">   @ApiOperation(value = &quot;恢复任务&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/resumejob&quot;)</span><br><span class="line">   @ApiImplicitParams(&#123;</span><br><span class="line">   @ApiImplicitParam(name = &quot;id&quot;, value = &quot;id&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line">   &#125;)</span><br><span class="line">    public Response resumejob(@RequestParam(value = &quot;id&quot;) String id) throws Exception &#123;</span><br><span class="line">     if(!StringUtils.isEmpty(id))&#123;</span><br><span class="line">     return iDetailsService.resumejob(id);</span><br><span class="line">     &#125;else &#123;</span><br><span class="line">     return Response.createSuccessResponse(&quot;id不能为空&quot;, null);</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 删除任务</span><br><span class="line">     * 删除操作前应该暂停该任务的触发器，并且停止该任务的执行</span><br><span class="line">     *</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">     @RequestMapping(value = &quot;/deletejob&quot;, method = RequestMethod.POST)</span><br><span class="line"> @ResponseBody</span><br><span class="line"> @ApiOperation(value = &quot;删除任务&quot;,notes = &quot;http://&#123;域名或IP&#125;/job/deletejob&quot;)</span><br><span class="line"> @ApiImplicitParams(&#123;</span><br><span class="line"> @ApiImplicitParam(name = &quot;id&quot;, value = &quot;id&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> @ApiImplicitParam(name = &quot;jobName&quot;, value = &quot;任务名称&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> @ApiImplicitParam(name = &quot;jobGroup&quot;, value = &quot;任务分组名称&quot;, required = true, paramType = &quot;query&quot;, dataType = &quot;String&quot;),</span><br><span class="line"> &#125;)</span><br><span class="line">    public Response deletejob(@RequestBody Details details) throws Exception &#123;</span><br><span class="line">    if(details != null) &#123;</span><br><span class="line">    return iDetailsService.deletejob(details);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">    return Response.createSuccessResponse(&quot;删除失败&quot;, null);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IDetailsService"><a href="#IDetailsService" class="headerlink" title="IDetailsService"></a>IDetailsService</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.service;</span><br><span class="line"></span><br><span class="line">import cn.vcgroup.pay.common.Response;</span><br><span class="line">import cn.vcgroup.pay.entity.Details;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.service.IService;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> *  服务类</span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author dhj</span><br><span class="line"> * @since 2019-05-16</span><br><span class="line"> */</span><br><span class="line">public interface IDetailsService extends IService&lt;Details&gt; &#123;</span><br><span class="line">/*</span><br><span class="line"> * 保存定时任务</span><br><span class="line"> */</span><br><span class="line">Response saveDetails(Details details);</span><br><span class="line">/**</span><br><span class="line"> * 更新定时任务</span><br><span class="line"> * @method: selectDetailsById</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param details</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月16日 下午1:46:32</span><br><span class="line"> */</span><br><span class="line">Response selectDetailsById(Details details);</span><br><span class="line">/**</span><br><span class="line"> * 暂停任务</span><br><span class="line"> * @method: pausejob</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param id</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月16日 下午2:27:41</span><br><span class="line"> */</span><br><span class="line">Response pausejob(String id);</span><br><span class="line">/**</span><br><span class="line"> * 恢复任务</span><br><span class="line"> * @method: resumejob</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param id</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月16日 下午2:37:51</span><br><span class="line"> */</span><br><span class="line">Response resumejob(String id);</span><br><span class="line">/**</span><br><span class="line"> * 删除任务</span><br><span class="line"> * @method: deletejob</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param id</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月16日 下午2:43:23</span><br><span class="line"> */</span><br><span class="line">Response deletejob(Details id);</span><br><span class="line">/**</span><br><span class="line"> * 根据任务名称查询生存时间</span><br><span class="line"> * @method: queryByjobName</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param jobName</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月16日 下午4:15:11</span><br><span class="line"> */</span><br><span class="line">Details queryByjobName(String jobName);</span><br><span class="line">/**</span><br><span class="line"> * 查询定时任务列表</span><br><span class="line"> * @method: queryjob</span><br><span class="line"> * @Description: TODO</span><br><span class="line"> * @param details</span><br><span class="line"> * @return</span><br><span class="line"> * @author : dingzhj</span><br><span class="line"> * @date 2019年5月17日 上午10:00:54</span><br><span class="line"> */</span><br><span class="line">List&lt;Details&gt; queryjob(Details details);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建-BaseJob-interface"><a href="#新建-BaseJob-interface" class="headerlink" title="新建 BaseJob interface"></a>新建 BaseJob interface</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.quartz.Job;</span><br><span class="line">import org.quartz.JobExecutionContext;</span><br><span class="line">import org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by haoxy on 2018/9/28.</span><br><span class="line"> * E-mail:hxyHelloWorld@163.com</span><br><span class="line"> * github:https://github.com/haoxiaoyong1014</span><br><span class="line"> */</span><br><span class="line">public interface BaseJob extends Job &#123;</span><br><span class="line"></span><br><span class="line">    public void execute(JobExecutionContext context) throws JobExecutionException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DetailsServiceImpl实现类和-业务层"><a href="#DetailsServiceImpl实现类和-业务层" class="headerlink" title="DetailsServiceImpl实现类和 业务层"></a>DetailsServiceImpl实现类和 业务层</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.service.impl;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.collections.ListUtils;</span><br><span class="line">import org.quartz.CronExpression;</span><br><span class="line">import org.quartz.CronScheduleBuilder;</span><br><span class="line">import org.quartz.CronTrigger;</span><br><span class="line">import org.quartz.JobBuilder;</span><br><span class="line">import org.quartz.JobDetail;</span><br><span class="line">import org.quartz.JobKey;</span><br><span class="line">import org.quartz.Scheduler;</span><br><span class="line">import org.quartz.SchedulerException;</span><br><span class="line">import org.quartz.TriggerBuilder;</span><br><span class="line">import org.quartz.TriggerKey;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.transaction.annotation.Transactional;</span><br><span class="line">import org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.mapper.EntityWrapper;</span><br><span class="line">import com.baomidou.mybatisplus.service.impl.ServiceImpl;</span><br><span class="line"></span><br><span class="line">import cn.vcgroup.pay.common.Response;</span><br><span class="line">import cn.vcgroup.pay.entity.Details;</span><br><span class="line">import cn.vcgroup.pay.mapper.DetailsMapper;</span><br><span class="line">import cn.vcgroup.pay.service.BaseJob;</span><br><span class="line">import cn.vcgroup.pay.service.IDetailsService;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> *  服务实现类</span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author dhj</span><br><span class="line"> * @since 2019-05-16</span><br><span class="line"> */</span><br><span class="line">@Service</span><br><span class="line">public class DetailsServiceImpl extends ServiceImpl&lt;DetailsMapper, Details&gt; implements IDetailsService &#123;</span><br><span class="line">@Autowired</span><br><span class="line">public DetailsMapper detailsMapper;</span><br><span class="line"> @Autowired</span><br><span class="line"> @Qualifier(&quot;Scheduler&quot;)</span><br><span class="line"> public Scheduler scheduler;</span><br><span class="line"> </span><br><span class="line"> private static String job = &quot;cn.vcgroup.pay.jobs.&quot;;</span><br><span class="line">@Override</span><br><span class="line">@Transactional</span><br><span class="line">public Response saveDetails(Details details) &#123;</span><br><span class="line">try &#123;</span><br><span class="line"> EntityWrapper&lt;Details&gt; ew = new EntityWrapper&lt;&gt;();</span><br><span class="line">         ew.where(&quot;JOB_NAME=&#123;0&#125;&quot;,job+details.getJobName());</span><br><span class="line">         List&lt;Details&gt; list  = detailsMapper.selectList(ew);</span><br><span class="line">         if(list.size() &gt; 0) &#123;</span><br><span class="line">         return Response.createSuccessResponse(&quot;任务名称已存在&quot;, null);</span><br><span class="line">         &#125;else &#123;</span><br><span class="line">         if(!isValidExpression(details.getCron()))&#123;</span><br><span class="line">         return Response.createSuccessResponse(&quot;Cron表达式不正确&quot;, null); </span><br><span class="line">         &#125;</span><br><span class="line">         details.setJobName(job+details.getJobName());</span><br><span class="line">         detailsMapper.insert(details);</span><br><span class="line">         addCronJob(details);</span><br><span class="line">         &#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">return Response.createSuccessResponse(&quot;保存失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">return Response.createSuccessResponse(&quot;保存成功&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> /*</span><br><span class="line">  * 校验表达式</span><br><span class="line">  */</span><br><span class="line">public boolean isValidExpression(String cron)&#123;</span><br><span class="line">return CronExpression.isValidExpression(cron);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 创建定时任务</span><br><span class="line"> */</span><br><span class="line">    public void addCronJob(Details details) throws Exception &#123;</span><br><span class="line">        // 启动调度器</span><br><span class="line">        scheduler.start();</span><br><span class="line">        //构建job信息</span><br><span class="line">        JobDetail jobDetail = JobBuilder.newJob(getClass(details.getJobName()).getClass()).</span><br><span class="line">                withIdentity(details.getJobName(), details.getJobGroup())</span><br><span class="line">                .build();</span><br><span class="line">        //表达式调度构建器(即任务执行的时间)</span><br><span class="line">        CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(details.getCron());</span><br><span class="line">        //按新的cronExpression表达式构建一个新的trigger</span><br><span class="line">        CronTrigger trigger = TriggerBuilder.newTrigger().</span><br><span class="line">                withIdentity(details.getJobName(), details.getJobGroup())</span><br><span class="line">                .withSchedule(scheduleBuilder)</span><br><span class="line">                .build();</span><br><span class="line">        try &#123;</span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line"></span><br><span class="line">        &#125; catch (SchedulerException e) &#123;</span><br><span class="line">            System.out.println(&quot;创建定时任务失败&quot; + e);</span><br><span class="line">            throw new Exception(&quot;创建定时任务失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 根据类名称，通过反射得到该类，然后创建一个BaseJob的实例。</span><br><span class="line">     * 由于NewJob和HelloJob都实现了BaseJob，</span><br><span class="line">     * 所以这里不需要我们手动去判断。这里涉及到了一些java多态调用的机制</span><br><span class="line">     *</span><br><span class="line">     * @param classname</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static BaseJob getClass(String classname) throws Exception &#123;</span><br><span class="line">        Class&lt;?&gt; class1 = Class.forName(classname);</span><br><span class="line">        return (BaseJob) class1.newInstance();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">@Override</span><br><span class="line">@Transactional</span><br><span class="line">public Response selectDetailsById(Details details) &#123;</span><br><span class="line">Details detailsInfo = detailsMapper.selectById(details.getId());</span><br><span class="line">if(detailsInfo != null) &#123;</span><br><span class="line">if(!isValidExpression(details.getCron()))&#123;</span><br><span class="line">     return Response.createSuccessResponse(&quot;Cron表达式不正确&quot;, null); </span><br><span class="line">        &#125;</span><br><span class="line">if(!StringUtils.isEmpty(details.getCron())) &#123;</span><br><span class="line">detailsInfo.setCron(details.getCron());</span><br><span class="line">&#125;</span><br><span class="line">if(!StringUtils.isEmpty(details.getTimeToLive())) &#123;</span><br><span class="line">detailsInfo.setTimeToLive(details.getTimeToLive());</span><br><span class="line">&#125;</span><br><span class="line">detailsInfo.setIsSuspend(&quot;0&quot;);</span><br><span class="line">detailsMapper.updateById(detailsInfo);</span><br><span class="line">try &#123;</span><br><span class="line">jobreschedule(detailsInfo.getJobName(),detailsInfo.getJobGroup(),detailsInfo.getCron());</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">return Response.createSuccessResponse(&quot;更新失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">return Response.createSuccessResponse(&quot;更新成功&quot;, null);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">return Response.createSuccessResponse(&quot;更新失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> public void jobreschedule(String jobClassName, String jobGroupName, String cronExpression) throws Exception &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(jobClassName, jobGroupName);</span><br><span class="line">            // 表达式调度构建器</span><br><span class="line">            CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(cronExpression);</span><br><span class="line"></span><br><span class="line">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class="line"></span><br><span class="line">            // 按新的cronExpression表达式重新构建trigger</span><br><span class="line">            trigger = trigger.getTriggerBuilder().withIdentity(triggerKey).withSchedule(scheduleBuilder).build();</span><br><span class="line"></span><br><span class="line">            // 按新的trigger重新设置job执行</span><br><span class="line">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class="line">        &#125; catch (SchedulerException e) &#123;</span><br><span class="line">            System.out.println(&quot;更新定时任务失败&quot; + e);</span><br><span class="line">            throw new Exception(&quot;更新定时任务失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">@Transactional</span><br><span class="line">public Response pausejob(String id) &#123;</span><br><span class="line">Details detailsInfo = detailsMapper.selectById(id);</span><br><span class="line">if(detailsInfo != null) &#123;</span><br><span class="line">detailsInfo.setIsSuspend(&quot;1&quot;);</span><br><span class="line">detailsMapper.updateById(detailsInfo);</span><br><span class="line">try &#123;</span><br><span class="line">jobPause(detailsInfo.getJobName(),detailsInfo.getJobGroup());</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">return Response.createSuccessResponse(&quot; 暂停失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">return Response.createSuccessResponse(&quot;暂停成功&quot;, null);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">return Response.createSuccessResponse(&quot;暂停失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> public void jobPause(String jobClassName, String jobGroupName) throws Exception &#123;</span><br><span class="line">        scheduler.pauseJob(JobKey.jobKey(jobClassName, jobGroupName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">@Transactional</span><br><span class="line">public Response resumejob(String id) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">Details detailsInfo = detailsMapper.selectById(id);</span><br><span class="line">if(detailsInfo != null) &#123;</span><br><span class="line">detailsInfo.setIsSuspend(&quot;0&quot;);</span><br><span class="line">detailsMapper.updateById(detailsInfo);</span><br><span class="line">jobresume(detailsInfo.getJobName(),detailsInfo.getJobGroup());</span><br><span class="line">return Response.createSuccessResponse(&quot;恢复成功&quot;, null);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">return Response.createSuccessResponse(&quot;恢复失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">return Response.createSuccessResponse(&quot;恢复失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> public void jobresume(String jobClassName, String jobGroupName) throws Exception &#123;</span><br><span class="line">        scheduler.resumeJob(JobKey.jobKey(jobClassName, jobGroupName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">@Transactional</span><br><span class="line">public Response deletejob(Details details) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">detailsMapper.deleteById(details.getId());</span><br><span class="line">jobdelete(details.getJobName(),details.getJobGroup());</span><br><span class="line">return Response.createSuccessResponse(&quot;删除成功&quot;, null);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">return Response.createSuccessResponse(&quot;删除失败&quot;, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  public void jobdelete(String jobClassName, String jobGroupName) throws Exception &#123;</span><br><span class="line">        scheduler.pauseTrigger(TriggerKey.triggerKey(jobClassName, jobGroupName));</span><br><span class="line">        scheduler.unscheduleJob(TriggerKey.triggerKey(jobClassName, jobGroupName));</span><br><span class="line">        scheduler.deleteJob(JobKey.jobKey(jobClassName, jobGroupName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Details queryByjobName(String jobName) &#123;</span><br><span class="line"> EntityWrapper&lt;Details&gt; ew = new EntityWrapper&lt;&gt;();</span><br><span class="line">     ew.where(&quot;JOB_NAME=&#123;0&#125;&quot;,jobName);</span><br><span class="line">     List&lt;Details&gt; list  = detailsMapper.selectList(ew);</span><br><span class="line">     if(list.size() &gt; 0) &#123;</span><br><span class="line">     return list.get(0);</span><br><span class="line">     &#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public List&lt;Details&gt; queryjob(Details details) &#123;</span><br><span class="line">EntityWrapper&lt;Details&gt; ew = new EntityWrapper&lt;&gt;();</span><br><span class="line"> ew.where(&quot;1 = 1&quot;);</span><br><span class="line">if(!StringUtils.isEmpty(details.getJobName())) &#123;</span><br><span class="line"> ew.like(&quot;JOB_NAME&quot;, details.getJobName());</span><br><span class="line">&#125;</span><br><span class="line">if(!StringUtils.isEmpty(details.getJobGroup())) &#123;</span><br><span class="line"> ew.like(&quot;JOB_GROUP&quot;, details.getJobGroup());</span><br><span class="line">&#125;</span><br><span class="line">return detailsMapper.selectList(ew);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建一个-jobs包-和HelloJob-java"><a href="#新建一个-jobs包-和HelloJob-java" class="headerlink" title="新建一个 jobs包 和HelloJob.java"></a>新建一个 jobs包 和HelloJob.java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package cn.vcgroup.pay.jobs;</span><br><span class="line"></span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">import javax.annotation.PostConstruct;</span><br><span class="line"></span><br><span class="line">import org.quartz.JobDataMap;</span><br><span class="line">import org.quartz.JobDetail;</span><br><span class="line">import org.quartz.JobExecutionContext;</span><br><span class="line">import org.quartz.JobExecutionException;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import cn.vcgroup.pay.controller.JobController;</span><br><span class="line">import cn.vcgroup.pay.entity.Details;</span><br><span class="line">import cn.vcgroup.pay.service.BaseJob;</span><br><span class="line">import cn.vcgroup.pay.service.IDetailsService;</span><br><span class="line">import cn.vcgroup.pay.service.LogInfoService;</span><br><span class="line">import cn.vcgroup.pay.service.impl.DetailsServiceImpl;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">@Configuration</span><br><span class="line">public class HelloJob implements BaseJob&#123;</span><br><span class="line"></span><br><span class="line">    private static Logger log = LoggerFactory.getLogger(HelloJob.class);</span><br><span class="line">    @Override</span><br><span class="line">    public void execute(JobExecutionContext context) throws JobExecutionException &#123;</span><br><span class="line">        log.info(&quot;Hello Job执行时间: &quot; + new Date());</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概代码就是这样记录一下方便以后用到，项目中可以根据自己的业务需求也修改代码，直供参考。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;导入依赖包&quot;&gt;&lt;a href=&quot;#导入依赖包&quot; class=&quot;headerlink&quot; title=&quot;导入依赖包&quot;&gt;&lt;/a&gt;导入依赖包&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="quartz" scheme="http://yoursite.com/categories/quartz/"/>
    
    
      <category term="quartz" scheme="http://yoursite.com/tags/quartz/"/>
    
  </entry>
  
  <entry>
    <title>windows64位 安装oracle11G和创建用户</title>
    <link href="http://yoursite.com/2018/01/31/Untitled/"/>
    <id>http://yoursite.com/2018/01/31/Untitled/</id>
    <published>2018-01-31T06:30:00.000Z</published>
    <updated>2018-01-30T07:47:59.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p> 1.解压压缩文件，并把2个压缩包解压到同一个文件下</p><p> <img src="/img/解压文件.png" alt="image"></p><p> 2.运行解压目录的setup.exe</p><p> <img src="/img/运行.png" alt="image"></p><h2 id="详细安装步骤"><a href="#详细安装步骤" class="headerlink" title="详细安装步骤"></a>详细安装步骤</h2><p>1.配置安全跟新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">电子邮件和口令都可以不填写直接下一步，提信息直接确定</span><br></pre></td></tr></table></figure><p><img src="/img/邮箱.png" alt="image"></p><p><img src="/img/邮箱提示.png" alt="image"></p><p>2.安装选项</p><p>直接选择默认创建和配置一个数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装完数据库管理软件后，系统会自动创建一个数据库实例。</span><br></pre></td></tr></table></figure></p><p>3.系统类</p><p> 默认就可以了</p><p><img src="/img/系统类.png" alt="image"></p><p>4.典型安装。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.重要步骤。</span><br><span class="line">2.建议只需要将Oracle基目录更新下，目录路径不要含有中文或其它的特殊字符。</span><br><span class="line">全局数据库名可以默认，且口令密码，必须要牢记。密码输入时，有提示警告，不符合Oracel建议时不用管。</span><br><span class="line">Oracel密码验证比较规则，有警告提示可以用管。</span><br></pre></td></tr></table></figure><p><img src="/img/典型安装.png" alt="image"></p><p>5.先决条件检查。</p><p>安装程序会检查软硬件系统是否满足，安装此Oracle版本的最低要求。 直接下一步可以了。</p><p>6.概要</p><p>安装前的一些相关选择配置信息。</p><p><img src="/img/概要.png" alt="image"></p><ol><li>安装产品<br>自动安装。</li></ol><p><img src="/img/安装.png" alt="image"></p><p><img src="/img/安装完成.png" alt="image"></p><p> 数据库管理软件文件及dbms文件安装完后，会自动创建安装一个实例数据库默认前面的orcl名称的数据库。</p><p> <img src="/img/创建实例.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实例数据库创建完成了，系统 默认是把所有账户都锁定不可用了(除sys和system账户可用外)，建议点右边的口令管理，将常用的scott账户解锁并输入密码。</span><br></pre></td></tr></table></figure><p><img src="/img/口令管理.png" alt="image"></p><p>8.安装成功,完成即可</p><p><img src="/img/完成.png" alt="image"></p><h2 id="oracle-创建用户"><a href="#oracle-创建用户" class="headerlink" title="oracle 创建用户"></a>oracle 创建用户</h2><p>1.运行–&gt; sqlplus </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：userName/pawd as sysdba</span><br></pre></td></tr></table></figure><p>2.创建新用户</p><p>创建表空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create tablespace user</span><br><span class="line">logging</span><br><span class="line">datafile &apos;D:\dingzhj\date\user.dbf&apos;</span><br><span class="line">size 50m</span><br><span class="line">autoextend on</span><br><span class="line">next 50m maxsize 20480m;</span><br></pre></td></tr></table></figure><p>创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create user 用户名 identified by 密码 </span><br><span class="line">default tablespace 用户名</span><br><span class="line">eg:</span><br><span class="line">create user air_forecast identified by 123456 </span><br><span class="line">default tablespace air_forecast</span><br></pre></td></tr></table></figure><p>给用户赋予权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant resource,connect to air_forecast</span><br></pre></td></tr></table></figure><p>删除用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user air_forecast cascade</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装准备&quot;&gt;&lt;a href=&quot;#安装准备&quot; class=&quot;headerlink&quot; title=&quot;安装准备&quot;&gt;&lt;/a&gt;安装准备&lt;/h2&gt;&lt;p&gt; 1.解压压缩文件，并把2个压缩包解压到同一个文件下&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/img/解压文件.png&quot; al
      
    
    </summary>
    
      <category term="oracle" scheme="http://yoursite.com/categories/oracle/"/>
    
    
      <category term="oracle" scheme="http://yoursite.com/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title> wampserver端口配置和外网访问</title>
    <link href="http://yoursite.com/2018/01/30/wampserver%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E5%92%8C%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://yoursite.com/2018/01/30/wampserver端口配置和外网访问/</id>
    <published>2018-01-30T09:06:00.000Z</published>
    <updated>2018-01-29T11:04:28.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="wampserver端口配置和外网访问"><a href="#wampserver端口配置和外网访问" class="headerlink" title="wampserver端口配置和外网访问"></a>wampserver端口配置和外网访问</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一般在window服务器上安装wampserver 启动会出现 计算机中丢失 MSVCR110.dll</span><br><span class="line">等情况，这个是服务器系统的问题，这时候我们至于要下载一个directx repair系统修复工具</span><br><span class="line">就可以了，修复完在启动wampserver。</span><br></pre></td></tr></table></figure><p>配置端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Listen 12.34.56.78:80</span><br><span class="line">Listen 0.0.0.0:80</span><br><span class="line">Listen [::0]:80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ServerName localhost:80</span><br></pre></td></tr></table></figure><p>配置外网访问 apache下的配置文件httpd.conf<br>只需要在对应的位置 添加Require all granted<br>或把#Require all denied修改加Require all granted 重启服务就OK了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">大概在296行</span><br><span class="line">&lt;Files &quot;.ht*&quot;&gt;</span><br><span class="line">    #Require all denied</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">大概在279行</span><br><span class="line">  AllowOverride all</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Controls who can get stuff from this server.</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">#   onlineoffline tag - don&apos;t remove</span><br><span class="line">   Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">大概在240行</span><br><span class="line">&lt;Directory /&gt;</span><br><span class="line">    AllowOverride none</span><br><span class="line">    Require all granted</span><br><span class="line"> &lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> 大概在389行</span><br><span class="line"> &lt;Directory &quot;E:/wamp/bin/apache/apache2.4.9/cgi-bin&quot;&gt;</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Options None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;wampserver端口配置和外网访问&quot;&gt;&lt;a href=&quot;#wampserver端口配置和外网访问&quot; class=&quot;headerlink&quot; title=&quot;wampserver端口配置和外网访问&quot;&gt;&lt;/a&gt;wampserver端口配置和外网访问&lt;/h2&gt;&lt;hr&gt;

      
    
    </summary>
    
      <category term="wampserver" scheme="http://yoursite.com/categories/wampserver/"/>
    
    
      <category term="wampserver" scheme="http://yoursite.com/tags/wampserver/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2018/01/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/01/27/我的第一篇博客/</id>
    <published>2018-01-27T05:45:00.000Z</published>
    <updated>2018-01-30T07:31:16.926Z</updated>
    
    <content type="html"><![CDATA[<h5 id="我的第一篇博客"><a href="#我的第一篇博客" class="headerlink" title="我的第一篇博客"></a>我的第一篇博客</h5><hr><blockquote><p>最近闲来无事看网上博客挺多的，就想搭建一个自己的博客来记录自己在开发中遇到的问题并且分享给大家。就用 ==github + hexo== 经过网上查询资料，零基础的就搭建了属于自己的博客。</p><p>博客中有什么问题和不对的地方，可以给留言，小弟及时改正免得误导大家。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;我的第一篇博客&quot;&gt;&lt;a href=&quot;#我的第一篇博客&quot; class=&quot;headerlink&quot; title=&quot;我的第一篇博客&quot;&gt;&lt;/a&gt;我的第一篇博客&lt;/h5&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;最近闲来无事看网上博客挺多的，就想搭建一个自己的博客来记录自己在
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>linux常用命令</title>
    <link href="http://yoursite.com/2018/01/27/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/01/27/linux常用命令/</id>
    <published>2018-01-26T17:05:00.000Z</published>
    <updated>2018-01-25T07:41:30.966Z</updated>
    
    <content type="html"><![CDATA[<h6 id="linux-常用命令"><a href="#linux-常用命令" class="headerlink" title="linux 常用命令"></a>linux 常用命令</h6><hr><p>查看当前磁盘<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df  -h</span><br></pre></td></tr></table></figure></p><p>查看当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure><p>查看编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $LANG</span><br></pre></td></tr></table></figure><p>修改编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p>解压文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf **.tar.gz </span><br><span class="line">unzip filename.zip</span><br></pre></td></tr></table></figure></p><p>查看当前tomcat 进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep tomcat</span><br></pre></td></tr></table></figure><p>映射端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080</span><br></pre></td></tr></table></figure></p><p>修改文件夹下的所有目录用户和组权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown  -R  kssj:kssj logs</span><br></pre></td></tr></table></figure><p>拷贝目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -ri  a文件  b文件</span><br></pre></td></tr></table></figure><p>修改文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test.xml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;linux-常用命令&quot;&gt;&lt;a href=&quot;#linux-常用命令&quot; class=&quot;headerlink&quot; title=&quot;linux 常用命令&quot;&gt;&lt;/a&gt;linux 常用命令&lt;/h6&gt;&lt;hr&gt;
&lt;p&gt;查看当前磁盘&lt;br&gt;&lt;figure class=&quot;highligh
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>我的随笔</title>
    <link href="http://yoursite.com/2018/01/26/%E6%88%91%E7%9A%84%E9%9A%8F%E7%AC%94/"/>
    <id>http://yoursite.com/2018/01/26/我的随笔/</id>
    <published>2018-01-26T00:10:00.000Z</published>
    <updated>2018-01-30T07:37:55.044Z</updated>
    
    <content type="html"><![CDATA[<h5 id="oracle-数据回滚"><a href="#oracle-数据回滚" class="headerlink" title="oracle 数据回滚"></a>oracle 数据回滚</h5><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from X_PEOPLE_INFO as of timestamp to_timestamp(&apos;2017-09-30 11:00:00&apos;,&apos;yyyy-mm-dd hh24:mi:ss&apos;);</span><br><span class="line">alter table X_PEOPLE_INFO enable row movement;</span><br><span class="line">flashback table X_PEOPLE_INFO to timestamp to_timestamp(&apos;2017-09-30 11:00:00&apos;,&apos;yyyy-mm-dd HH</span><br></pre></td></tr></table></figure><p>======表结构不变的情况下</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;oracle-数据回滚&quot;&gt;&lt;a href=&quot;#oracle-数据回滚&quot; class=&quot;headerlink&quot; title=&quot;oracle 数据回滚&quot;&gt;&lt;/a&gt;oracle 数据回滚&lt;/h5&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
      <category term="oracle" scheme="http://yoursite.com/categories/oracle/"/>
    
    
      <category term="oracle" scheme="http://yoursite.com/tags/oracle/"/>
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
